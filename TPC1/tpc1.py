import json
import sys

json_data = {}
out_filename = str()
url = str()


def parse_json_file(filename):
    f = open(filename, "r")
    global json_data
    json_data = json.load(f)
    f.close()
    
def get_url(filename):
    f = open(filename, "r")
    fl = f.readlines()
    f.close()
    
    for l in fl:
        if "@base <" in l:
            global url
            url = l.split("<")[1].split(">")[0]
    
def create_output_file(filename):
    f = open(filename, "r")
    fl = f.readlines()
    f.close()
    global out_filename, link
    out_filename = filename.split(".")[0] + "-out.ttl"
    
    fout = open(out_filename, "w")
    for i in range(0, fl.__len__()):
        if "#    Individuals" not in fl[i-3]:
            fout.write(fl[i])
        else:
            break
    fout.close()
    fl.clear()
    
def write_modalidades():
    modalidades = set()
    
    for exam in json_data:
        modalidades.add(exam["modalidade"])
    
    f = open(out_filename, "a")
    
    for m in modalidades:
        f.write(f"""###  http://www.semanticweb.org/eduardo/ontologies/2025/1/athletes/{m}
:{m} rdf:type owl:NamedIndividual ,
                  :Modalidade ;
         :nomeModalidade "{m}" .
         
         
""")
    
    f.close()
    
def write_person_exam():
    f = open(out_filename, "a")
    
    for exam in json_data:
        f.write(f"""###  {url}{exam["nome"]["primeiro"]}_{exam["nome"]["último"]}
:{exam["nome"]["primeiro"]}_{exam["nome"]["último"]} rdf:type owl:NamedIndividual ,
                        :Pessoa ;
               :temModalidade :{exam["modalidade"]} ;
               :clube "{exam["clube"]}" ;
               :email "{exam["email"]}" ;
               :federado "{str(exam["federado"]).lower()}"^^xsd:boolean ;
               :genero "{exam["género"]}" ;
               :idade {exam["idade"]} ;
               :morada "{exam["morada"]}" ;
               :primeiroNome "{exam["nome"]["primeiro"]}" ;
               :ultimoNome "{exam["nome"]["último"]}" .


###  {url}Exame_{exam["_id"]}
:Exame_{exam["_id"]} rdf:type owl:NamedIndividual ,
                                         :Exame ;
                                :realizadoPor :{exam["nome"]["primeiro"]}_{exam["nome"]["último"]} ;
                                :dataEMD "{exam["dataEMD"]}" ;
                                :id "{exam["_id"]}" ;
                                :resultado "{str(exam["resultado"]).lower()}"^^xsd:boolean .
                                
                                
""")
    
    f.write("###  Generated by the OWL API (version 4.5.29.2024-05-13T12:11:03Z) https://github.com/owlcs/owlapi")
    f.close()
    
    
    
    
      
    
    
        

    

if __name__ == "__main__":    
    if sys.argv.__len__() == 3:
        parse_json_file(sys.argv[1])
        create_output_file(sys.argv[2])
        get_url(sys.argv[2])
        write_modalidades()
        write_person_exam()
    else:
        print("Location of the input file not specified.")
        sys.exit()
        
    